#===================================
# remot3.it connectd package options
#===================================
MODIFIED="January 19, 2018"
#===================================
BUILDDATE="Mon Feb  5 15:51:08 PST 2018"    
#===================================
# set DEBUG to 1 to enable debugging messages
DEBUG="0"
#===================================
# BASEDIR is root on many systems. If so, leave it blank.
BASEDIR=
#===================================
# BIN_DIR is default path for executables.  We install connectd scripts and binaries here.
BIN_DIR="$BASEDIR"/usr/bin
#===================================
LOG_DIR=/var/log
# ----------------------------------------
# folders and files
# these folders are not the same as used by Bulk Registration
#===================================

#===================================
# Configuration Folder Variables
#===================================
# CONNECTD_DIR is where we store configured provisioning files per connection
# 
CONNECTD_DIR="$BASEDIR"/etc/connectd
CONNECTD_CONF_DIR="$CONNECTD_DIR"/services
#===================================
# CONNECTD_LIB_DIR is the location of template files and script fragments used in installation.
CONNECTD_LIB_DIR="$BASEDIR"/usr/share/connectd
#===================================
# HARDWAREIDFILE holds the Hardware ID that groups services together at remot3.it
HARDWAREIDFILE="$BASEDIR"/etc/connectd/serial.txt
#===================================
# /tmp is used for temporary files
TMP_DIR=/tmp
#===================================
INIT_DIR="$BASEDIR"/etc/init.d
#===================================
# folder to keep pids per connectd process
PID_DIR=/var/run
#===================================
# PLATFORM is the extension for the binaries, depends on CPU architecture
# and shared libraries
PLATFORM=pi    
#===================================
# startupScripts = 0, ask; 1, init.d; 2, systemd; 3, crontab
startupScripts=3
#===================================
# PROVISION is the extension for the template provisioning files
PROVISION=pi
#===================================
# NETIF is the network interface to use for MAC for auto-naming of services (used in connectd_register).
NETIF=$(route | grep default | awk '{ print $8 }')
#===================================
# mac is the expression used to get the MAC for autonaming
mac=$(ip addr | grep ether | tail -n 1 | awk '{ print $2 }') 
#===================================
CURL_OPTS="-k -s -S -X"
#===================================
# PSFLAGS is the option to be sent to the "ps" command to find the running daemons
# For systems with root login and busybox implementation of ps, this should probably be: 
# PSFLAGS=
# For Ubuntu/Raspberry Pi/etc. running bash and standalone ps binary, it should be:
# PSFLAGS="ax"
PSFLAGS=ax    
#===================================
# If REGISTERSERVICE is set to 1, then account credentials need to be supplied, either above,
# or if those are left at default values, then the script asks for username, password and developer key.
# If REGISTERSERVICE is 0, then the enablement files, binaries, installation and startup scripts
# are installed, but the services are not registered.  In this state they are "ready to register"
# by the end user.

# if REGISTERSERVICE is 1, then it means that we need the account credentials to register the
# services at the time of running this script.
# if REGISTERSERVICE is 0, then all we do is to install the daemon, scripts and initialized enablement files
# in anticipation of either bulk registration or registering via https://remot3.it.
REGISTERSERVICE="1"
#===================================
# If ENFORCEROOT is 1, then we check for root user (id = 0)
# print warning and exit if not
ENFORCEROOT="1"
#==================================================================================
# If STARTDAEMONSONREBOOT is set to "1", then following the execution of the connectd_register script,
# the next time the device is rebooted, the daemons will be started.
# If it is preferred that the daemons not autostart on the next reboot, set STARTDAEMONSONREBOOT to "0".
STARTDAEMONSONREBOOT="1"
#==============================================================================
# CHECKFORDEB looks to see if there is a Debian package newer than what is installed.
CHECKFORDEB="0"
#==============================================================================
# The PACKAGE variable sets the Debian package name.  Only relevant if CHECKFORDEB is set to 1.
PACKAGE="connectd"
#===================================


#===================================
# IMPORTANT CONFIG BELOW
#
#if BULK REG then we need hardware_id and registration_key, this is setup to use
#the WLAN0 adapter MAC address  as the hardware_id and the eth0 as the registration_key
#this is likely not what you want on your system.  hardware_id must be unique on the
#remot3.it system, your device will be rejected if not unique.
#
#Good hardware_id's are MAC+Random, UUID, IMEI etc.  You may want to pre or pospend
#a static string onto IMEI or MAC addresses to know that you are unique on your 
#product line, we are not sure if you can trust MAC addresses to be unique.
#
#Registration keys should be uniqe per Hardware ID, though it is not required. 
#Pridictable registration keys are prone to cause problems if the hardware ID's
#are also predictable.  Registration keys can be a different MAC than the 
#hardware_id, preprogrammed random value, hash of hardware_id+secret, or any
#other value you wish to use.   Remot3.it does not care as long as you provide
#us the unique hardware_id and registration key for registration.
#
#registraiton key hash example:
#company secret = "xyzzy"
#registration_key=sha256(hardware_id,"xyzzy")
#
#for testing you can create a harware_id.txt and a registraiton_key.txt in your
#/etc/connectd directory and this software will use these values to override
#the programatic methods used below.   Just make sure these files do not exist
#in production unless you are using them to write unique values at production
#time.
#

#
if [ "$BULK_REG" = 1 ]; then
# Bulk Registration Variables
#===================================
# set reg debug = 1 to debug registration
#===================================
# The expressions below are supplied to provide the Bulk Registration API with the
# Hardware ID (HWID) and Registration Key needed to identify the unique product
# Hardware ID but be unique across the remot3.it system
# Registration can be another unique value readable from the command line, the
# same as the HWID, or a constant for all devices.
#
REG_DEBUG=0
# if desired, customize these expressions for your platform, 
# e.g to pick up the IMEI rather than the network adapter MAC address.
# network adapter name to use for the HWID, if desired
REG_ID_ADAPTER="wlan0"
#REG_ID_ADAPTER="enp3s0"
HW_ID_OVERRIDE_FILE="${CONNECTD_DIR}/hardware_id.txt"

if [ -e $HW_ID_OVERRIDE_FILE ]; then
    hardware_id="$(cat $HW_ID_OVERRIDE_FILE)"
else
    id_address=/sys/class/net/"$REG_ID_ADAPTER"/address

    if [ -e "$id_address" ]; then
        hardware_id="$(cat $id_address | sed s/://g)"
    else
        echo "Error! Check expression for hardware_id in connectd_options."
        echo "Exiting..."
        exit 1
    fi
fi

# network adapter name to use for the Registration Key, if desired
REG_KEY_ADAPTER="eth0"
#REG_KEY_ADAPTER="wlp2s0"
REG_KEY_OVERRIDE_FILE="${CONNECTD_DIR}/registration_key.txt"

if [ -e $REG_KEY_OVERRIDE_FILE ]; then
    registration_key="$(cat $REG_KEY_OVERRIDE_FILE)"
else
	rk_address=/sys/class/net/"$REG_KEY_ADAPTER"/address

	if [ -e "$rk_address" ]; then
   		registration_key="$(cat $rk_address | sed s/://g)"
	else
   		echo "Error! Check expression for registration_key in connectd_options."
   		echo "Exiting..."
   		exit 1
	fi
fi

### End if [ "$BULK_REG" = 1 ]
fi



